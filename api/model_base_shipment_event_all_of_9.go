/*
DCSA OpenAPI specification for Track & Trace

Provides equipment actual milestones along with Estimated Time of Arrival following DCSA standards

API version: 2.2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the BaseShipmentEventAllOf9 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BaseShipmentEventAllOf9{}

// BaseShipmentEventAllOf9 struct for BaseShipmentEventAllOf9
type BaseShipmentEventAllOf9 struct {
	// ID uniquely identifying a shipment.  Deprecated - this is replaced by documentID which can contain different values depending on the value of the documentTypeCode field
	// Deprecated
	ShipmentID interface{} `json:"shipmentID,omitempty"`
}

// NewBaseShipmentEventAllOf9 instantiates a new BaseShipmentEventAllOf9 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBaseShipmentEventAllOf9() *BaseShipmentEventAllOf9 {
	this := BaseShipmentEventAllOf9{}
	return &this
}

// NewBaseShipmentEventAllOf9WithDefaults instantiates a new BaseShipmentEventAllOf9 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBaseShipmentEventAllOf9WithDefaults() *BaseShipmentEventAllOf9 {
	this := BaseShipmentEventAllOf9{}
	return &this
}

// GetShipmentID returns the ShipmentID field value if set, zero value otherwise (both if not set or set to explicit null).
// Deprecated
func (o *BaseShipmentEventAllOf9) GetShipmentID() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.ShipmentID
}

// GetShipmentIDOk returns a tuple with the ShipmentID field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
// Deprecated
func (o *BaseShipmentEventAllOf9) GetShipmentIDOk() (*interface{}, bool) {
	if o == nil || IsNil(o.ShipmentID) {
		return nil, false
	}
	return &o.ShipmentID, true
}

// HasShipmentID returns a boolean if a field has been set.
func (o *BaseShipmentEventAllOf9) HasShipmentID() bool {
	if o != nil && IsNil(o.ShipmentID) {
		return true
	}

	return false
}

// SetShipmentID gets a reference to the given interface{} and assigns it to the ShipmentID field.
// Deprecated
func (o *BaseShipmentEventAllOf9) SetShipmentID(v interface{}) {
	o.ShipmentID = v
}

func (o BaseShipmentEventAllOf9) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BaseShipmentEventAllOf9) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ShipmentID != nil {
		toSerialize["shipmentID"] = o.ShipmentID
	}
	return toSerialize, nil
}

type NullableBaseShipmentEventAllOf9 struct {
	value *BaseShipmentEventAllOf9
	isSet bool
}

func (v NullableBaseShipmentEventAllOf9) Get() *BaseShipmentEventAllOf9 {
	return v.value
}

func (v *NullableBaseShipmentEventAllOf9) Set(val *BaseShipmentEventAllOf9) {
	v.value = val
	v.isSet = true
}

func (v NullableBaseShipmentEventAllOf9) IsSet() bool {
	return v.isSet
}

func (v *NullableBaseShipmentEventAllOf9) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBaseShipmentEventAllOf9(val *BaseShipmentEventAllOf9) *NullableBaseShipmentEventAllOf9 {
	return &NullableBaseShipmentEventAllOf9{value: val, isSet: true}
}

func (v NullableBaseShipmentEventAllOf9) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBaseShipmentEventAllOf9) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
