/*
DCSA OpenAPI specification for Track & Trace

Provides equipment actual milestones along with Estimated Time of Arrival following DCSA standards

API version: 2.2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the TransportCallAllOf2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TransportCallAllOf2{}

// TransportCallAllOf2 struct for TransportCallAllOf2
type TransportCallAllOf2 struct {
	// The vessel operator-specific identifier of the Voyage.
	CarrierVoyageNumber *string `json:"carrierVoyageNumber,omitempty"`
}

// NewTransportCallAllOf2 instantiates a new TransportCallAllOf2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransportCallAllOf2() *TransportCallAllOf2 {
	this := TransportCallAllOf2{}
	return &this
}

// NewTransportCallAllOf2WithDefaults instantiates a new TransportCallAllOf2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransportCallAllOf2WithDefaults() *TransportCallAllOf2 {
	this := TransportCallAllOf2{}
	return &this
}

// GetCarrierVoyageNumber returns the CarrierVoyageNumber field value if set, zero value otherwise.
func (o *TransportCallAllOf2) GetCarrierVoyageNumber() string {
	if o == nil || IsNil(o.CarrierVoyageNumber) {
		var ret string
		return ret
	}
	return *o.CarrierVoyageNumber
}

// GetCarrierVoyageNumberOk returns a tuple with the CarrierVoyageNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransportCallAllOf2) GetCarrierVoyageNumberOk() (*string, bool) {
	if o == nil || IsNil(o.CarrierVoyageNumber) {
		return nil, false
	}
	return o.CarrierVoyageNumber, true
}

// HasCarrierVoyageNumber returns a boolean if a field has been set.
func (o *TransportCallAllOf2) HasCarrierVoyageNumber() bool {
	if o != nil && !IsNil(o.CarrierVoyageNumber) {
		return true
	}

	return false
}

// SetCarrierVoyageNumber gets a reference to the given string and assigns it to the CarrierVoyageNumber field.
func (o *TransportCallAllOf2) SetCarrierVoyageNumber(v string) {
	o.CarrierVoyageNumber = &v
}

func (o TransportCallAllOf2) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TransportCallAllOf2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CarrierVoyageNumber) {
		toSerialize["carrierVoyageNumber"] = o.CarrierVoyageNumber
	}
	return toSerialize, nil
}

type NullableTransportCallAllOf2 struct {
	value *TransportCallAllOf2
	isSet bool
}

func (v NullableTransportCallAllOf2) Get() *TransportCallAllOf2 {
	return v.value
}

func (v *NullableTransportCallAllOf2) Set(val *TransportCallAllOf2) {
	v.value = val
	v.isSet = true
}

func (v NullableTransportCallAllOf2) IsSet() bool {
	return v.isSet
}

func (v *NullableTransportCallAllOf2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransportCallAllOf2(val *TransportCallAllOf2) *NullableTransportCallAllOf2 {
	return &NullableTransportCallAllOf2{value: val, isSet: true}
}

func (v NullableTransportCallAllOf2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransportCallAllOf2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
