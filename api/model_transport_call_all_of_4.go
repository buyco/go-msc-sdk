/*
DCSA OpenAPI specification for Track & Trace

Provides equipment actual milestones along with Estimated Time of Arrival following DCSA standards

API version: 2.2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the TransportCallAllOf4 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TransportCallAllOf4{}

// TransportCallAllOf4 struct for TransportCallAllOf4
type TransportCallAllOf4 struct {
	// The vessel operator-specific identifier of the export Voyage.
	ExportVoyageNumber *string `json:"exportVoyageNumber,omitempty"`
}

// NewTransportCallAllOf4 instantiates a new TransportCallAllOf4 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransportCallAllOf4() *TransportCallAllOf4 {
	this := TransportCallAllOf4{}
	return &this
}

// NewTransportCallAllOf4WithDefaults instantiates a new TransportCallAllOf4 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransportCallAllOf4WithDefaults() *TransportCallAllOf4 {
	this := TransportCallAllOf4{}
	return &this
}

// GetExportVoyageNumber returns the ExportVoyageNumber field value if set, zero value otherwise.
func (o *TransportCallAllOf4) GetExportVoyageNumber() string {
	if o == nil || IsNil(o.ExportVoyageNumber) {
		var ret string
		return ret
	}
	return *o.ExportVoyageNumber
}

// GetExportVoyageNumberOk returns a tuple with the ExportVoyageNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransportCallAllOf4) GetExportVoyageNumberOk() (*string, bool) {
	if o == nil || IsNil(o.ExportVoyageNumber) {
		return nil, false
	}
	return o.ExportVoyageNumber, true
}

// HasExportVoyageNumber returns a boolean if a field has been set.
func (o *TransportCallAllOf4) HasExportVoyageNumber() bool {
	if o != nil && !IsNil(o.ExportVoyageNumber) {
		return true
	}

	return false
}

// SetExportVoyageNumber gets a reference to the given string and assigns it to the ExportVoyageNumber field.
func (o *TransportCallAllOf4) SetExportVoyageNumber(v string) {
	o.ExportVoyageNumber = &v
}

func (o TransportCallAllOf4) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TransportCallAllOf4) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ExportVoyageNumber) {
		toSerialize["exportVoyageNumber"] = o.ExportVoyageNumber
	}
	return toSerialize, nil
}

type NullableTransportCallAllOf4 struct {
	value *TransportCallAllOf4
	isSet bool
}

func (v NullableTransportCallAllOf4) Get() *TransportCallAllOf4 {
	return v.value
}

func (v *NullableTransportCallAllOf4) Set(val *TransportCallAllOf4) {
	v.value = val
	v.isSet = true
}

func (v NullableTransportCallAllOf4) IsSet() bool {
	return v.isSet
}

func (v *NullableTransportCallAllOf4) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransportCallAllOf4(val *TransportCallAllOf4) *NullableTransportCallAllOf4 {
	return &NullableTransportCallAllOf4{value: val, isSet: true}
}

func (v NullableTransportCallAllOf4) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransportCallAllOf4) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
