/*
DCSA OpenAPI specification for Track & Trace

Provides equipment actual milestones along with Estimated Time of Arrival following DCSA standards

API version: 2.2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the TransportCallAllOf6 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TransportCallAllOf6{}

// TransportCallAllOf6 struct for TransportCallAllOf6
type TransportCallAllOf6 struct {
	// Transport operator&apos;s key that uniquely identifies each individual call. This key is essential to distinguish between two separate calls at the same location within one voyage.
	TransportCallSequenceNumber *int32 `json:"transportCallSequenceNumber,omitempty"`
}

// NewTransportCallAllOf6 instantiates a new TransportCallAllOf6 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransportCallAllOf6() *TransportCallAllOf6 {
	this := TransportCallAllOf6{}
	return &this
}

// NewTransportCallAllOf6WithDefaults instantiates a new TransportCallAllOf6 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransportCallAllOf6WithDefaults() *TransportCallAllOf6 {
	this := TransportCallAllOf6{}
	return &this
}

// GetTransportCallSequenceNumber returns the TransportCallSequenceNumber field value if set, zero value otherwise.
func (o *TransportCallAllOf6) GetTransportCallSequenceNumber() int32 {
	if o == nil || IsNil(o.TransportCallSequenceNumber) {
		var ret int32
		return ret
	}
	return *o.TransportCallSequenceNumber
}

// GetTransportCallSequenceNumberOk returns a tuple with the TransportCallSequenceNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransportCallAllOf6) GetTransportCallSequenceNumberOk() (*int32, bool) {
	if o == nil || IsNil(o.TransportCallSequenceNumber) {
		return nil, false
	}
	return o.TransportCallSequenceNumber, true
}

// HasTransportCallSequenceNumber returns a boolean if a field has been set.
func (o *TransportCallAllOf6) HasTransportCallSequenceNumber() bool {
	if o != nil && !IsNil(o.TransportCallSequenceNumber) {
		return true
	}

	return false
}

// SetTransportCallSequenceNumber gets a reference to the given int32 and assigns it to the TransportCallSequenceNumber field.
func (o *TransportCallAllOf6) SetTransportCallSequenceNumber(v int32) {
	o.TransportCallSequenceNumber = &v
}

func (o TransportCallAllOf6) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TransportCallAllOf6) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TransportCallSequenceNumber) {
		toSerialize["transportCallSequenceNumber"] = o.TransportCallSequenceNumber
	}
	return toSerialize, nil
}

type NullableTransportCallAllOf6 struct {
	value *TransportCallAllOf6
	isSet bool
}

func (v NullableTransportCallAllOf6) Get() *TransportCallAllOf6 {
	return v.value
}

func (v *NullableTransportCallAllOf6) Set(val *TransportCallAllOf6) {
	v.value = val
	v.isSet = true
}

func (v NullableTransportCallAllOf6) IsSet() bool {
	return v.isSet
}

func (v *NullableTransportCallAllOf6) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransportCallAllOf6(val *TransportCallAllOf6) *NullableTransportCallAllOf6 {
	return &NullableTransportCallAllOf6{value: val, isSet: true}
}

func (v NullableTransportCallAllOf6) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransportCallAllOf6) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
