/*
DCSA OpenAPI specification for Track & Trace

Provides equipment actual milestones along with Estimated Time of Arrival following DCSA standards

API version: 2.2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the BaseShipmentEventAllOf8 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BaseShipmentEventAllOf8{}

// BaseShipmentEventAllOf8 struct for BaseShipmentEventAllOf8
type BaseShipmentEventAllOf8 struct {
	// The identifier for a shipment
	ShipmentID *string `json:"shipmentID,omitempty"`
}

// NewBaseShipmentEventAllOf8 instantiates a new BaseShipmentEventAllOf8 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBaseShipmentEventAllOf8() *BaseShipmentEventAllOf8 {
	this := BaseShipmentEventAllOf8{}
	return &this
}

// NewBaseShipmentEventAllOf8WithDefaults instantiates a new BaseShipmentEventAllOf8 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBaseShipmentEventAllOf8WithDefaults() *BaseShipmentEventAllOf8 {
	this := BaseShipmentEventAllOf8{}
	return &this
}

// GetShipmentID returns the ShipmentID field value if set, zero value otherwise.
func (o *BaseShipmentEventAllOf8) GetShipmentID() string {
	if o == nil || IsNil(o.ShipmentID) {
		var ret string
		return ret
	}
	return *o.ShipmentID
}

// GetShipmentIDOk returns a tuple with the ShipmentID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseShipmentEventAllOf8) GetShipmentIDOk() (*string, bool) {
	if o == nil || IsNil(o.ShipmentID) {
		return nil, false
	}
	return o.ShipmentID, true
}

// HasShipmentID returns a boolean if a field has been set.
func (o *BaseShipmentEventAllOf8) HasShipmentID() bool {
	if o != nil && !IsNil(o.ShipmentID) {
		return true
	}

	return false
}

// SetShipmentID gets a reference to the given string and assigns it to the ShipmentID field.
func (o *BaseShipmentEventAllOf8) SetShipmentID(v string) {
	o.ShipmentID = &v
}

func (o BaseShipmentEventAllOf8) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BaseShipmentEventAllOf8) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ShipmentID) {
		toSerialize["shipmentID"] = o.ShipmentID
	}
	return toSerialize, nil
}

type NullableBaseShipmentEventAllOf8 struct {
	value *BaseShipmentEventAllOf8
	isSet bool
}

func (v NullableBaseShipmentEventAllOf8) Get() *BaseShipmentEventAllOf8 {
	return v.value
}

func (v *NullableBaseShipmentEventAllOf8) Set(val *BaseShipmentEventAllOf8) {
	v.value = val
	v.isSet = true
}

func (v NullableBaseShipmentEventAllOf8) IsSet() bool {
	return v.isSet
}

func (v *NullableBaseShipmentEventAllOf8) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBaseShipmentEventAllOf8(val *BaseShipmentEventAllOf8) *NullableBaseShipmentEventAllOf8 {
	return &NullableBaseShipmentEventAllOf8{value: val, isSet: true}
}

func (v NullableBaseShipmentEventAllOf8) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBaseShipmentEventAllOf8) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
