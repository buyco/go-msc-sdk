/*
DCSA OpenAPI specification for Track & Trace

Provides equipment actual milestones along with Estimated Time of Arrival following DCSA standards

API version: 2.2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the TransportCallAllOf9 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TransportCallAllOf9{}

// TransportCallAllOf9 struct for TransportCallAllOf9
type TransportCallAllOf9 struct {
	FacilityCodeListProvider *FacilityCodeListProvider `json:"facilityCodeListProvider,omitempty"`
}

// NewTransportCallAllOf9 instantiates a new TransportCallAllOf9 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransportCallAllOf9() *TransportCallAllOf9 {
	this := TransportCallAllOf9{}
	return &this
}

// NewTransportCallAllOf9WithDefaults instantiates a new TransportCallAllOf9 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransportCallAllOf9WithDefaults() *TransportCallAllOf9 {
	this := TransportCallAllOf9{}
	return &this
}

// GetFacilityCodeListProvider returns the FacilityCodeListProvider field value if set, zero value otherwise.
func (o *TransportCallAllOf9) GetFacilityCodeListProvider() FacilityCodeListProvider {
	if o == nil || IsNil(o.FacilityCodeListProvider) {
		var ret FacilityCodeListProvider
		return ret
	}
	return *o.FacilityCodeListProvider
}

// GetFacilityCodeListProviderOk returns a tuple with the FacilityCodeListProvider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransportCallAllOf9) GetFacilityCodeListProviderOk() (*FacilityCodeListProvider, bool) {
	if o == nil || IsNil(o.FacilityCodeListProvider) {
		return nil, false
	}
	return o.FacilityCodeListProvider, true
}

// HasFacilityCodeListProvider returns a boolean if a field has been set.
func (o *TransportCallAllOf9) HasFacilityCodeListProvider() bool {
	if o != nil && !IsNil(o.FacilityCodeListProvider) {
		return true
	}

	return false
}

// SetFacilityCodeListProvider gets a reference to the given FacilityCodeListProvider and assigns it to the FacilityCodeListProvider field.
func (o *TransportCallAllOf9) SetFacilityCodeListProvider(v FacilityCodeListProvider) {
	o.FacilityCodeListProvider = &v
}

func (o TransportCallAllOf9) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TransportCallAllOf9) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FacilityCodeListProvider) {
		toSerialize["facilityCodeListProvider"] = o.FacilityCodeListProvider
	}
	return toSerialize, nil
}

type NullableTransportCallAllOf9 struct {
	value *TransportCallAllOf9
	isSet bool
}

func (v NullableTransportCallAllOf9) Get() *TransportCallAllOf9 {
	return v.value
}

func (v *NullableTransportCallAllOf9) Set(val *TransportCallAllOf9) {
	v.value = val
	v.isSet = true
}

func (v NullableTransportCallAllOf9) IsSet() bool {
	return v.isSet
}

func (v *NullableTransportCallAllOf9) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransportCallAllOf9(val *TransportCallAllOf9) *NullableTransportCallAllOf9 {
	return &NullableTransportCallAllOf9{value: val, isSet: true}
}

func (v NullableTransportCallAllOf9) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransportCallAllOf9) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
