/*
DCSA OpenAPI specification for Track & Trace

Provides equipment actual milestones along with Estimated Time of Arrival following DCSA standards

API version: 2.2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the TransportCallAllOf10 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TransportCallAllOf10{}

// TransportCallAllOf10 struct for TransportCallAllOf10
type TransportCallAllOf10 struct {
	FacilityTypeCode *FacilityTypeCodeTRN `json:"facilityTypeCode,omitempty"`
}

// NewTransportCallAllOf10 instantiates a new TransportCallAllOf10 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransportCallAllOf10() *TransportCallAllOf10 {
	this := TransportCallAllOf10{}
	return &this
}

// NewTransportCallAllOf10WithDefaults instantiates a new TransportCallAllOf10 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransportCallAllOf10WithDefaults() *TransportCallAllOf10 {
	this := TransportCallAllOf10{}
	return &this
}

// GetFacilityTypeCode returns the FacilityTypeCode field value if set, zero value otherwise.
func (o *TransportCallAllOf10) GetFacilityTypeCode() FacilityTypeCodeTRN {
	if o == nil || IsNil(o.FacilityTypeCode) {
		var ret FacilityTypeCodeTRN
		return ret
	}
	return *o.FacilityTypeCode
}

// GetFacilityTypeCodeOk returns a tuple with the FacilityTypeCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransportCallAllOf10) GetFacilityTypeCodeOk() (*FacilityTypeCodeTRN, bool) {
	if o == nil || IsNil(o.FacilityTypeCode) {
		return nil, false
	}
	return o.FacilityTypeCode, true
}

// HasFacilityTypeCode returns a boolean if a field has been set.
func (o *TransportCallAllOf10) HasFacilityTypeCode() bool {
	if o != nil && !IsNil(o.FacilityTypeCode) {
		return true
	}

	return false
}

// SetFacilityTypeCode gets a reference to the given FacilityTypeCodeTRN and assigns it to the FacilityTypeCode field.
func (o *TransportCallAllOf10) SetFacilityTypeCode(v FacilityTypeCodeTRN) {
	o.FacilityTypeCode = &v
}

func (o TransportCallAllOf10) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TransportCallAllOf10) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FacilityTypeCode) {
		toSerialize["facilityTypeCode"] = o.FacilityTypeCode
	}
	return toSerialize, nil
}

type NullableTransportCallAllOf10 struct {
	value *TransportCallAllOf10
	isSet bool
}

func (v NullableTransportCallAllOf10) Get() *TransportCallAllOf10 {
	return v.value
}

func (v *NullableTransportCallAllOf10) Set(val *TransportCallAllOf10) {
	v.value = val
	v.isSet = true
}

func (v NullableTransportCallAllOf10) IsSet() bool {
	return v.isSet
}

func (v *NullableTransportCallAllOf10) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransportCallAllOf10(val *TransportCallAllOf10) *NullableTransportCallAllOf10 {
	return &NullableTransportCallAllOf10{value: val, isSet: true}
}

func (v NullableTransportCallAllOf10) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransportCallAllOf10) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
