/*
DCSA OpenAPI specification for Track & Trace

Provides equipment actual milestones along with Estimated Time of Arrival following DCSA standards

API version: 2.2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the TransportCallAllOf1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TransportCallAllOf1{}

// TransportCallAllOf1 struct for TransportCallAllOf1
type TransportCallAllOf1 struct {
	// The code of the service for which the schedule details are published.
	CarrierServiceCode *string `json:"carrierServiceCode,omitempty"`
}

// NewTransportCallAllOf1 instantiates a new TransportCallAllOf1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransportCallAllOf1() *TransportCallAllOf1 {
	this := TransportCallAllOf1{}
	return &this
}

// NewTransportCallAllOf1WithDefaults instantiates a new TransportCallAllOf1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransportCallAllOf1WithDefaults() *TransportCallAllOf1 {
	this := TransportCallAllOf1{}
	return &this
}

// GetCarrierServiceCode returns the CarrierServiceCode field value if set, zero value otherwise.
func (o *TransportCallAllOf1) GetCarrierServiceCode() string {
	if o == nil || IsNil(o.CarrierServiceCode) {
		var ret string
		return ret
	}
	return *o.CarrierServiceCode
}

// GetCarrierServiceCodeOk returns a tuple with the CarrierServiceCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TransportCallAllOf1) GetCarrierServiceCodeOk() (*string, bool) {
	if o == nil || IsNil(o.CarrierServiceCode) {
		return nil, false
	}
	return o.CarrierServiceCode, true
}

// HasCarrierServiceCode returns a boolean if a field has been set.
func (o *TransportCallAllOf1) HasCarrierServiceCode() bool {
	if o != nil && !IsNil(o.CarrierServiceCode) {
		return true
	}

	return false
}

// SetCarrierServiceCode gets a reference to the given string and assigns it to the CarrierServiceCode field.
func (o *TransportCallAllOf1) SetCarrierServiceCode(v string) {
	o.CarrierServiceCode = &v
}

func (o TransportCallAllOf1) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TransportCallAllOf1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CarrierServiceCode) {
		toSerialize["carrierServiceCode"] = o.CarrierServiceCode
	}
	return toSerialize, nil
}

type NullableTransportCallAllOf1 struct {
	value *TransportCallAllOf1
	isSet bool
}

func (v NullableTransportCallAllOf1) Get() *TransportCallAllOf1 {
	return v.value
}

func (v *NullableTransportCallAllOf1) Set(val *TransportCallAllOf1) {
	v.value = val
	v.isSet = true
}

func (v NullableTransportCallAllOf1) IsSet() bool {
	return v.isSet
}

func (v *NullableTransportCallAllOf1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransportCallAllOf1(val *TransportCallAllOf1) *NullableTransportCallAllOf1 {
	return &NullableTransportCallAllOf1{value: val, isSet: true}
}

func (v NullableTransportCallAllOf1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransportCallAllOf1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
