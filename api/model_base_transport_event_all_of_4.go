/*
DCSA OpenAPI specification for Track & Trace

Provides equipment actual milestones along with Estimated Time of Arrival following DCSA standards

API version: 2.2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the BaseTransportEventAllOf4 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BaseTransportEventAllOf4{}

// BaseTransportEventAllOf4 struct for BaseTransportEventAllOf4
type BaseTransportEventAllOf4 struct {
	// Free text information provided by the vessel operator regarding the reasons for the change in schedule and/or plans to mitigate schedule slippage.  Deprecated - use changeRemark instead
	// Deprecated
	VesselScheduleChangeRemark *string `json:"vesselScheduleChangeRemark,omitempty"`
}

// NewBaseTransportEventAllOf4 instantiates a new BaseTransportEventAllOf4 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBaseTransportEventAllOf4() *BaseTransportEventAllOf4 {
	this := BaseTransportEventAllOf4{}
	return &this
}

// NewBaseTransportEventAllOf4WithDefaults instantiates a new BaseTransportEventAllOf4 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBaseTransportEventAllOf4WithDefaults() *BaseTransportEventAllOf4 {
	this := BaseTransportEventAllOf4{}
	return &this
}

// GetVesselScheduleChangeRemark returns the VesselScheduleChangeRemark field value if set, zero value otherwise.
// Deprecated
func (o *BaseTransportEventAllOf4) GetVesselScheduleChangeRemark() string {
	if o == nil || IsNil(o.VesselScheduleChangeRemark) {
		var ret string
		return ret
	}
	return *o.VesselScheduleChangeRemark
}

// GetVesselScheduleChangeRemarkOk returns a tuple with the VesselScheduleChangeRemark field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *BaseTransportEventAllOf4) GetVesselScheduleChangeRemarkOk() (*string, bool) {
	if o == nil || IsNil(o.VesselScheduleChangeRemark) {
		return nil, false
	}
	return o.VesselScheduleChangeRemark, true
}

// HasVesselScheduleChangeRemark returns a boolean if a field has been set.
func (o *BaseTransportEventAllOf4) HasVesselScheduleChangeRemark() bool {
	if o != nil && !IsNil(o.VesselScheduleChangeRemark) {
		return true
	}

	return false
}

// SetVesselScheduleChangeRemark gets a reference to the given string and assigns it to the VesselScheduleChangeRemark field.
// Deprecated
func (o *BaseTransportEventAllOf4) SetVesselScheduleChangeRemark(v string) {
	o.VesselScheduleChangeRemark = &v
}

func (o BaseTransportEventAllOf4) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BaseTransportEventAllOf4) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.VesselScheduleChangeRemark) {
		toSerialize["vesselScheduleChangeRemark"] = o.VesselScheduleChangeRemark
	}
	return toSerialize, nil
}

type NullableBaseTransportEventAllOf4 struct {
	value *BaseTransportEventAllOf4
	isSet bool
}

func (v NullableBaseTransportEventAllOf4) Get() *BaseTransportEventAllOf4 {
	return v.value
}

func (v *NullableBaseTransportEventAllOf4) Set(val *BaseTransportEventAllOf4) {
	v.value = val
	v.isSet = true
}

func (v NullableBaseTransportEventAllOf4) IsSet() bool {
	return v.isSet
}

func (v *NullableBaseTransportEventAllOf4) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBaseTransportEventAllOf4(val *BaseTransportEventAllOf4) *NullableBaseTransportEventAllOf4 {
	return &NullableBaseTransportEventAllOf4{value: val, isSet: true}
}

func (v NullableBaseTransportEventAllOf4) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBaseTransportEventAllOf4) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
