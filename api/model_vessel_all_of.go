/*
DCSA OpenAPI specification for Track & Trace

Provides equipment actual milestones along with Estimated Time of Arrival following DCSA standards

API version: 2.2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the VesselAllOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VesselAllOf{}

// VesselAllOf struct for VesselAllOf
type VesselAllOf struct {
	// The unique reference for a registered Vessel. The reference is the International Maritime Organisation (IMO) number, also sometimes known as the Lloyd&apos;s register code, which does not change during the lifetime of the vessel
	VesselIMONumber *string `json:"vesselIMONumber,omitempty"`
}

// NewVesselAllOf instantiates a new VesselAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVesselAllOf() *VesselAllOf {
	this := VesselAllOf{}
	return &this
}

// NewVesselAllOfWithDefaults instantiates a new VesselAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVesselAllOfWithDefaults() *VesselAllOf {
	this := VesselAllOf{}
	return &this
}

// GetVesselIMONumber returns the VesselIMONumber field value if set, zero value otherwise.
func (o *VesselAllOf) GetVesselIMONumber() string {
	if o == nil || IsNil(o.VesselIMONumber) {
		var ret string
		return ret
	}
	return *o.VesselIMONumber
}

// GetVesselIMONumberOk returns a tuple with the VesselIMONumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VesselAllOf) GetVesselIMONumberOk() (*string, bool) {
	if o == nil || IsNil(o.VesselIMONumber) {
		return nil, false
	}
	return o.VesselIMONumber, true
}

// HasVesselIMONumber returns a boolean if a field has been set.
func (o *VesselAllOf) HasVesselIMONumber() bool {
	if o != nil && !IsNil(o.VesselIMONumber) {
		return true
	}

	return false
}

// SetVesselIMONumber gets a reference to the given string and assigns it to the VesselIMONumber field.
func (o *VesselAllOf) SetVesselIMONumber(v string) {
	o.VesselIMONumber = &v
}

func (o VesselAllOf) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VesselAllOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.VesselIMONumber) {
		toSerialize["vesselIMONumber"] = o.VesselIMONumber
	}
	return toSerialize, nil
}

type NullableVesselAllOf struct {
	value *VesselAllOf
	isSet bool
}

func (v NullableVesselAllOf) Get() *VesselAllOf {
	return v.value
}

func (v *NullableVesselAllOf) Set(val *VesselAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableVesselAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableVesselAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVesselAllOf(val *VesselAllOf) *NullableVesselAllOf {
	return &NullableVesselAllOf{value: val, isSet: true}
}

func (v NullableVesselAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVesselAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
