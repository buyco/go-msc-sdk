/*
DCSA OpenAPI specification for Track & Trace

Provides equipment actual milestones along with Estimated Time of Arrival following DCSA standards

API version: 2.2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the VesselAllOf3 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VesselAllOf3{}

// VesselAllOf3 struct for VesselAllOf3
type VesselAllOf3 struct {
	// A unique alphanumeric identity that belongs to the vessel and is assigned by the International Telecommunication Union (ITU). It consists of a threeletter alphanumeric prefix that indicates nationality, followed by one to four characters to identify the individual vessel. For instance, vessels registered under Denmark are assigned the prefix ranges 5PA-5QZ, OUAOZZ, and XPA-XPZ. The Call Sign changes whenever a vessel changes its flag.
	VesselCallSignNumber *string `json:"vesselCallSignNumber,omitempty"`
}

// NewVesselAllOf3 instantiates a new VesselAllOf3 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVesselAllOf3() *VesselAllOf3 {
	this := VesselAllOf3{}
	return &this
}

// NewVesselAllOf3WithDefaults instantiates a new VesselAllOf3 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVesselAllOf3WithDefaults() *VesselAllOf3 {
	this := VesselAllOf3{}
	return &this
}

// GetVesselCallSignNumber returns the VesselCallSignNumber field value if set, zero value otherwise.
func (o *VesselAllOf3) GetVesselCallSignNumber() string {
	if o == nil || IsNil(o.VesselCallSignNumber) {
		var ret string
		return ret
	}
	return *o.VesselCallSignNumber
}

// GetVesselCallSignNumberOk returns a tuple with the VesselCallSignNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VesselAllOf3) GetVesselCallSignNumberOk() (*string, bool) {
	if o == nil || IsNil(o.VesselCallSignNumber) {
		return nil, false
	}
	return o.VesselCallSignNumber, true
}

// HasVesselCallSignNumber returns a boolean if a field has been set.
func (o *VesselAllOf3) HasVesselCallSignNumber() bool {
	if o != nil && !IsNil(o.VesselCallSignNumber) {
		return true
	}

	return false
}

// SetVesselCallSignNumber gets a reference to the given string and assigns it to the VesselCallSignNumber field.
func (o *VesselAllOf3) SetVesselCallSignNumber(v string) {
	o.VesselCallSignNumber = &v
}

func (o VesselAllOf3) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VesselAllOf3) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.VesselCallSignNumber) {
		toSerialize["vesselCallSignNumber"] = o.VesselCallSignNumber
	}
	return toSerialize, nil
}

type NullableVesselAllOf3 struct {
	value *VesselAllOf3
	isSet bool
}

func (v NullableVesselAllOf3) Get() *VesselAllOf3 {
	return v.value
}

func (v *NullableVesselAllOf3) Set(val *VesselAllOf3) {
	v.value = val
	v.isSet = true
}

func (v NullableVesselAllOf3) IsSet() bool {
	return v.isSet
}

func (v *NullableVesselAllOf3) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVesselAllOf3(val *VesselAllOf3) *NullableVesselAllOf3 {
	return &NullableVesselAllOf3{value: val, isSet: true}
}

func (v NullableVesselAllOf3) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVesselAllOf3) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
