/*
DCSA OpenAPI specification for Track & Trace

Provides equipment actual milestones along with Estimated Time of Arrival following DCSA standards

API version: 2.2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the InlineResponseDefaultAllOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InlineResponseDefaultAllOf{}

// InlineResponseDefaultAllOf struct for InlineResponseDefaultAllOf
type InlineResponseDefaultAllOf struct {
	HttpMethod interface{} `json:"httpMethod,omitempty"`
}

// NewInlineResponseDefaultAllOf instantiates a new InlineResponseDefaultAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponseDefaultAllOf() *InlineResponseDefaultAllOf {
	this := InlineResponseDefaultAllOf{}
	return &this
}

// NewInlineResponseDefaultAllOfWithDefaults instantiates a new InlineResponseDefaultAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponseDefaultAllOfWithDefaults() *InlineResponseDefaultAllOf {
	this := InlineResponseDefaultAllOf{}
	return &this
}

// GetHttpMethod returns the HttpMethod field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *InlineResponseDefaultAllOf) GetHttpMethod() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.HttpMethod
}

// GetHttpMethodOk returns a tuple with the HttpMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineResponseDefaultAllOf) GetHttpMethodOk() (*interface{}, bool) {
	if o == nil || IsNil(o.HttpMethod) {
		return nil, false
	}
	return &o.HttpMethod, true
}

// HasHttpMethod returns a boolean if a field has been set.
func (o *InlineResponseDefaultAllOf) HasHttpMethod() bool {
	if o != nil && IsNil(o.HttpMethod) {
		return true
	}

	return false
}

// SetHttpMethod gets a reference to the given interface{} and assigns it to the HttpMethod field.
func (o *InlineResponseDefaultAllOf) SetHttpMethod(v interface{}) {
	o.HttpMethod = v
}

func (o InlineResponseDefaultAllOf) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InlineResponseDefaultAllOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.HttpMethod != nil {
		toSerialize["httpMethod"] = o.HttpMethod
	}
	return toSerialize, nil
}

type NullableInlineResponseDefaultAllOf struct {
	value *InlineResponseDefaultAllOf
	isSet bool
}

func (v NullableInlineResponseDefaultAllOf) Get() *InlineResponseDefaultAllOf {
	return v.value
}

func (v *NullableInlineResponseDefaultAllOf) Set(val *InlineResponseDefaultAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponseDefaultAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponseDefaultAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponseDefaultAllOf(val *InlineResponseDefaultAllOf) *NullableInlineResponseDefaultAllOf {
	return &NullableInlineResponseDefaultAllOf{value: val, isSet: true}
}

func (v NullableInlineResponseDefaultAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponseDefaultAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
