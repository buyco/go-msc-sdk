/*
DCSA OpenAPI specification for Track & Trace

Provides equipment actual milestones along with Estimated Time of Arrival following DCSA standards

API version: 2.2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// checks if the BaseTransportEventAllOf7 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BaseTransportEventAllOf7{}

// BaseTransportEventAllOf7 struct for BaseTransportEventAllOf7
type BaseTransportEventAllOf7 struct {
	TransportCall *TransportCall `json:"transportCall,omitempty"`
}

// NewBaseTransportEventAllOf7 instantiates a new BaseTransportEventAllOf7 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBaseTransportEventAllOf7() *BaseTransportEventAllOf7 {
	this := BaseTransportEventAllOf7{}
	return &this
}

// NewBaseTransportEventAllOf7WithDefaults instantiates a new BaseTransportEventAllOf7 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBaseTransportEventAllOf7WithDefaults() *BaseTransportEventAllOf7 {
	this := BaseTransportEventAllOf7{}
	return &this
}

// GetTransportCall returns the TransportCall field value if set, zero value otherwise.
func (o *BaseTransportEventAllOf7) GetTransportCall() TransportCall {
	if o == nil || IsNil(o.TransportCall) {
		var ret TransportCall
		return ret
	}
	return *o.TransportCall
}

// GetTransportCallOk returns a tuple with the TransportCall field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseTransportEventAllOf7) GetTransportCallOk() (*TransportCall, bool) {
	if o == nil || IsNil(o.TransportCall) {
		return nil, false
	}
	return o.TransportCall, true
}

// HasTransportCall returns a boolean if a field has been set.
func (o *BaseTransportEventAllOf7) HasTransportCall() bool {
	if o != nil && !IsNil(o.TransportCall) {
		return true
	}

	return false
}

// SetTransportCall gets a reference to the given TransportCall and assigns it to the TransportCall field.
func (o *BaseTransportEventAllOf7) SetTransportCall(v TransportCall) {
	o.TransportCall = &v
}

func (o BaseTransportEventAllOf7) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BaseTransportEventAllOf7) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TransportCall) {
		toSerialize["transportCall"] = o.TransportCall
	}
	return toSerialize, nil
}

type NullableBaseTransportEventAllOf7 struct {
	value *BaseTransportEventAllOf7
	isSet bool
}

func (v NullableBaseTransportEventAllOf7) Get() *BaseTransportEventAllOf7 {
	return v.value
}

func (v *NullableBaseTransportEventAllOf7) Set(val *BaseTransportEventAllOf7) {
	v.value = val
	v.isSet = true
}

func (v NullableBaseTransportEventAllOf7) IsSet() bool {
	return v.isSet
}

func (v *NullableBaseTransportEventAllOf7) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBaseTransportEventAllOf7(val *BaseTransportEventAllOf7) *NullableBaseTransportEventAllOf7 {
	return &NullableBaseTransportEventAllOf7{value: val, isSet: true}
}

func (v NullableBaseTransportEventAllOf7) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBaseTransportEventAllOf7) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
